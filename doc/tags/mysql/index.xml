<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on SAMZONG</title>
    <link>https://example.com/tags/mysql/</link>
    <description>Recent content in MySQL on SAMZONG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 03 Jul 2019 13:17:04 +0000</lastBuildDate><atom:link href="https://example.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL 命令行辅助 mycli</title>
      <link>https://example.com/posts/mysql-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%85%E5%8A%A9-mycli/</link>
      <pubDate>Wed, 03 Jul 2019 13:17:04 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%85%E5%8A%A9-mycli/</guid>
      <description>Install Mycli is tested on macOS and Linux. It runs on Python 2.</description>
    </item>
    
    <item>
      <title>MySQL(7) 索引创建、删除和查看</title>
      <link>https://example.com/posts/mysql-8-%E7%B4%A2%E5%BC%95%E5%88%9B%E5%BB%BA%E5%88%A0%E9%99%A4%E5%92%8C%E6%9F%A5%E7%9C%8B/</link>
      <pubDate>Thu, 09 Feb 2017 18:29:50 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-8-%E7%B4%A2%E5%BC%95%E5%88%9B%E5%BB%BA%E5%88%A0%E9%99%A4%E5%92%8C%E6%9F%A5%E7%9C%8B/</guid>
      <description>1. 索引的作用 在索引列上，数据库利用各种各样的快速定位技术，能够大大的提高查询效率，特别是当数据量非常大和查询设计到多个表时，索引的利用能够将效率提高成千上万倍，当然要合理的利用索引。
2. 创建索引 ​	在执行CREATE TABLE时可以创建索引，也可以在之后单独使用CREATE INDEX或ALTER TABLE来为表增加索引。</description>
    </item>
    
    <item>
      <title>每日备份MySQL单表数据</title>
      <link>https://example.com/posts/%E6%AF%8F%E6%97%A5%E5%A4%87%E4%BB%BDmysql%E5%8D%95%E8%A1%A8%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 15 Jan 2017 08:12:55 +0000</pubDate>
      
      <guid>https://example.com/posts/%E6%AF%8F%E6%97%A5%E5%A4%87%E4%BB%BDmysql%E5%8D%95%E8%A1%A8%E6%95%B0%E6%8D%AE/</guid>
      <description>最近愈近年底，客户业务涉及对账操作，所以同事提出需求需要单独备份某张表数据，并且每日备份；思考之后解决办法如下：
 mysqldump导出单张表的表结构及数据 新增数据库，专做临时每日数据备份库 导入该表数据到新增数据库内 重命名导入的表名（预防计划任务下次导入时数据覆盖） 编写脚本，添加Linux计划任务  1. mysqldump导出但张表的表结构及数据 mysqldump -h dbServer -PdbServerPort -u db_user -p -d dbName tbName &amp;gt; tbName.</description>
    </item>
    
    <item>
      <title>HowTo Reset MySQL Root Password</title>
      <link>https://example.com/posts/howto-reset-mysql-root-password/</link>
      <pubDate>Sun, 04 Dec 2016 09:57:23 +0000</pubDate>
      
      <guid>https://example.com/posts/howto-reset-mysql-root-password/</guid>
      <description>1. 处理的状态 首先确认服务器出于安全的状态，也就是没有人能够任意地连接MySQL数据库。 因为在重新设置MySQL的root密码的期间，MySQL数据库完全出于没有密码保护的 状态下，其他的用户也可以任意地登录和修改MySQL的信息。可以采用将MySQL对 外的端口封闭，并且停止Apache以及所有的用户进程的方法实现服务器的准安全 状态。最安全的状态是到服务器的Console上面操作，并且拔掉网线。
2. 重置密码  修改mysql配置文件，增加skip-grant-tables  [root@demo ~]# vim /etc/my.</description>
    </item>
    
    <item>
      <title>MySQL(5) 清空表命令之：truncate与delete区别</title>
      <link>https://example.com/posts/mysql-5-%E6%B8%85%E7%A9%BA%E8%A1%A8%E5%91%BD%E4%BB%A4%E4%B9%8Btruncate%E4%B8%8Edelete%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 10 Nov 2016 02:53:13 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-5-%E6%B8%85%E7%A9%BA%E8%A1%A8%E5%91%BD%E4%BB%A4%E4%B9%8Btruncate%E4%B8%8Edelete%E5%8C%BA%E5%88%AB/</guid>
      <description>在实际工作中，有时我们会想要去清空一张表的所有数据，常用的命令有delete和truncate这两个命令。
1. delete  在很多情况，我们对于delete的应用更多，因为它支持更多的匹配模式，我们可以使用where条件语句，清理一些特定的数据，关于delete的操作，这里不做过多解释，有空就专门写写delete的使用和原理。delete 在清空表时，如果表内有自增ID的设定，那么在delete清空之后，再插入数据时，自增ID不会从1开始，默认会继续增加; 除非我们使用OPTIMIZE TABLE，重置表属性；
mysql&amp;gt; delete from piwik_tmp; Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>HowTo Use pt-query-digest</title>
      <link>https://example.com/posts/howto-use-pt-query-digest/</link>
      <pubDate>Thu, 22 Sep 2016 15:20:12 +0000</pubDate>
      
      <guid>https://example.com/posts/howto-use-pt-query-digest/</guid>
      <description>1. 简介 索引可以我们更快速的执行查询，但是肯定存在不合理的索引，如果想找到那些索引不是很合适的查询，并在它们成为问题前进行优化，则可以使用pt-query-digest的查询审查“review”功能，分析其EXPLAIN出来的执行计划。
pt-query-digest是用于分析mysql慢查询的一个工具，它可以分析binlog、General log、slowlog，也可以通过SHOWPROCESSLIST或者通过tcpdump抓取的MySQL协议数据来进行分析。可以把分析结果输出到文件中，分析过程是先对查询语句的条件进行参数化，然后对参数化以后的查询进行分组统计，统计出各查询的执行时间、次数、占比等，可以借助分析结果找出问题进行优化。
2. Install Percona Toolkit &amp;amp; pt-query-digest percona-toolkit是一组高级命令行工具的集合，用来执行各种通过手工执行非常复杂和麻烦的mysql和系统任务。这些任务包括：</description>
    </item>
    
    <item>
      <title>HowTo Install MySQL 5.5/6/7 on RHEL/CentOS 5/6/7</title>
      <link>https://example.com/posts/howto-install-mysql-5-5-6-7-on-rhel-centos-5-6-7/</link>
      <pubDate>Thu, 07 Jul 2016 05:35:32 +0000</pubDate>
      
      <guid>https://example.com/posts/howto-install-mysql-5-5-6-7-on-rhel-centos-5-6-7/</guid>
      <description>Install Mysql 5.5 on RHEL/CentOS 5/6/7  Setup 1. Use Repository.</description>
    </item>
    
    <item>
      <title>MySQL(1) 常用优化</title>
      <link>https://example.com/posts/mysql-1-%E5%B8%B8%E7%94%A8%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 16 Jun 2016 02:29:00 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-1-%E5%B8%B8%E7%94%A8%E4%BC%98%E5%8C%96/</guid>
      <description>环境：MySQL 5.5 &amp;amp; MySQL 5.6 &amp;amp; RHEL/CentOS 5/6/7
 1.</description>
    </item>
    
    <item>
      <title>HowTo Monitoring MySQL server for Zabbix</title>
      <link>https://example.com/posts/howto-monitoring-mysql-server-for-zabbix/</link>
      <pubDate>Fri, 20 May 2016 07:24:58 +0000</pubDate>
      
      <guid>https://example.com/posts/howto-monitoring-mysql-server-for-zabbix/</guid>
      <description>安装插件包 yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm -y yum install percona-zabbix-templates.noarch -y yum install php* -y 导入模板 把/var/lib/zabbix/percona/templates/zabbix_agent_template_percona_mysql_server_ht_2.</description>
    </item>
    
    <item>
      <title>MySQL(3) mysqldump常用参数</title>
      <link>https://example.com/posts/mysql-3-mysqldump%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 05 May 2016 04:30:11 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-3-mysqldump%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</guid>
      <description>常用的mysqldump命令组合。
备份数据库 mysqldump db_name &amp;gt; bak_name.sql mysqldump -A -u [dbuser] -p db_name &amp;gt; bak_name.</description>
    </item>
    
    <item>
      <title>MySQL(4) MySQL数据库基础</title>
      <link>https://example.com/posts/mysql-4-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 29 Mar 2016 08:22:14 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-4-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</guid>
      <description>1. 测试环境  MacBook Pro 15‘ i7 16GB VMware Fushion 8 Pro MySQL Version 5.</description>
    </item>
    
    <item>
      <title>MySQL(6) 利用Linux计划任务定时同步MySQL</title>
      <link>https://example.com/posts/mysql-6-%E5%88%A9%E7%94%A8linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9A%E6%97%B6%E5%90%8C%E6%AD%A5mysql/</link>
      <pubDate>Thu, 24 Mar 2016 08:03:32 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-6-%E5%88%A9%E7%94%A8linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9A%E6%97%B6%E5%90%8C%E6%AD%A5mysql/</guid>
      <description>说下实际项目场景，公司一个应用已部署主从数据库，业务也正式上线；现在客户公司领导希望可以看到每天的业务数据报表，本设定直接到从库拿数据，然后进行数据处理，生成报表，但是Java同事提出需求新增用户和权限表，这样一来，如果直接使用生产库的表会导致后台系统管理人员与领导的账户和权限混淆，经过讨论决定，按照生产库的表结构新增特殊用户表和权限表；这样操作实际是可以在从库上新增表单，且不影响主从库之间的数据同步，但是从安全性的考虑，新增表单设计需要给用户Insert权限，为了保证从库只有利用主库同步写入数据，则只能给其他用户select权限。
 最终决定，因为报表系统的使用率低，直接在报表系统的服务器安装本地mysql数据库，通过计划任务定时到从库上同步数据。 1. 测试环境  MacBook Pro 15‘ i7 16GB VMware Fushion 8 Pro MySQL Version 5.</description>
    </item>
    
    <item>
      <title>MySQL(2) 开启慢日志优化</title>
      <link>https://example.com/posts/mysql-2-%E5%BC%80%E5%90%AF%E6%85%A2%E6%97%A5%E5%BF%97%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 22 Mar 2016 15:16:26 +0000</pubDate>
      
      <guid>https://example.com/posts/mysql-2-%E5%BC%80%E5%90%AF%E6%85%A2%E6%97%A5%E5%BF%97%E4%BC%98%E5%8C%96/</guid>
      <description>工欲善其事，必先利其器 &amp;ndash; mysql开启慢日志优化 慢查询日志 顾名思义就是记录查询比较慢得日志。
测试环境  mysql-server 5.6 CentOS 6.</description>
    </item>
    
    <item>
      <title>How to install MariaDB 10.1 on CentOS 7.x</title>
      <link>https://example.com/posts/install_mariadb10_centos7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/install_mariadb10_centos7/</guid>
      <description>CentOS 7.x 默认的MariaDB版本是5.5，但是在有些情况我们需要用到10版本，注意MariaDB与MySQL版本是不一样的，下面简单降下如何快速安装MariaDB10.1 到CentOS 7.x.
创建MariaDB 10.1的Yum源 cat &amp;lt;&amp;lt;EOF | sudo tee -a /etc/yum.</description>
    </item>
    
    <item>
      <title>HowTo-Automatic-EasyBackup-MysqlDB</title>
      <link>https://example.com/posts/howto-automatic-easybackup-mysqldb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/posts/howto-automatic-easybackup-mysqldb/</guid>
      <description>mysql是一个免费、开源中一款非常优秀关系型数据库，在现在的互联网中使用的非常广泛，无论是大型IT项目还是个人开发者的小项目，mysql都能很好的协助人们处理数据库相关的工作，同时数据库对于我们来说是非常重要，所以经常备份数据库是一个基本的操作，这会为你或者你的团队，减少非常多不必要的麻烦。
mysqldump是一个简单而且非常流行的mysql全量备份方式，配合crontab添加自动备份任务，很好的完成了我们针对数据库备份的需求，下面我会通过一个例子来说明如何完成这项操作。
 mysqldump是mysql自带的备份工具，所以只要你安装mysql应用包，就无需单独安装mysqldump
 测试环境 我搭建了一个Ghost博客环境，数据库采用是的Mysql，接下来我想在每天00:00执行数据库备份操作，并在备份完成之后，告诉我是否备份成功。
所以我们的步骤应该：
 测试备份命令是否可以正常执行 安装测试命令行邮件工具mailx 安装计划任务工具Crontab 编写备份脚本 添加计划任务  测试备份命令 首先你要获得你要备份的数据库对应的select权限，仅需要select权限即可，mysql在管理方面，应该坚持只赋予必须权限的原则。</description>
    </item>
    
  </channel>
</rss>
